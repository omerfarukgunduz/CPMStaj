@using Portal.Domain.Entities;

@model UserListPageViewModal

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<html>
<head>
     <title>Admin Paneli - Kullanıcı Yönetimi</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
</head>



<body>
    <h2>Kullanıcı Yönetimi</h2>

    <table class="table table-bordered" >
        <tr>
            <td>&nbsp;&nbsp; Kullanıcı ID</td>
            <td >Kullanıcı Adı</td>
            <td>Kullanıcı Rolü</td>
            <td>Son Değişiklik</td>
            <td>Sil</td>
            <td >Güncelle</td>

        </tr>
        @foreach (var item in Model.User)
        {
            <tr>
                <td >&nbsp;&nbsp; @item.Id </td>
                <td>@item.UserName</td>
                <td id="deneme_@item.Id"></td>
                @{
                    <script>
                        var obj = document.getElementById('deneme_@item.Id');
                    </script>
                    if (item.Role == 2)
                    {
                        <script>
                            obj.innerHTML = 'Admin';
                        </script>
                    }
                    if (item.Role == 1)
                    {
                        <script>
                            obj.innerHTML = 'Kullanıcı';
                        </script>
                    }
                }

                    <td>@item.CreatedDate</td>
                <td><a href="/Home/KullaniciSil/@item.Id.ToString()" class="btn btn-danger silButton" data-id="@item.Id.ToString()">Sil</a></td>
                <td><a asp-controller="Home" asp-action="KullaniciEdit" asp-all-route-data="@(new Dictionary<string,string>(){{"Id",item.Id.ToString()}})" class="btn btn-warning">Güncelle</a></td>
                </tr>
        }
    </table>
 
    <button type="button" class="btn btn-primary" id="kullanicieklegetir">Yeni Kullanıcı Ekle</button>

    <form method="post" action="/Home/KullanıcıEkle" enctype="multipart/form-data">
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="form-group" id="exampleModalLabel">YENİ KULLANICI EKLE</h1>
                    </div>
                    <div class="modal-body">

                        <h3>Kullanıcı Adı	</h3>
                        <div class="form-group" id="kullaniciadi"> @Html.TextBoxFor(elm=>elm.SingleUser.UserName, new {@class = "form-control", @type="text", @placeholder="Kullanıcı adı giriniz...", @value = Model.SingleUser.UserName}) </div>


                        <h3>Şifre</h3>
                        <div class="form-group" id="sifre"> @Html.TextBoxFor(elm=>elm.SingleUser.Password, new {@class = "form-control", @type="text", @placeholder="Şifre giriniz...", @value = Model.SingleUser.Password}) </div>

                        @{
                            // Örnek bir liste oluşturma
                            List<SelectListItem> roleList = new List<SelectListItem>
                        {
                        new SelectListItem { Value = "1", Text = "Kullanıcı" },
                        new SelectListItem { Value = "2", Text = "Admin" },

                        // Daha fazla seçenek eklenebilir
                        };
                        }

                        <h3>Kullanıcı Rolü</h3>
                        <div class="form-group" id="rol">
                            @Html.DropDownListFor(elm => elm.SingleUser.Role, new SelectList(roleList, "Value", "Text"), new { @class = "form-control", id = "roleDropdown" })
                        </div>




                        <div class="modal-footer">
                            <a class="btn btn-secondary" asp-action="AdminKullaniciListesi">İptal</a>
                            <button id="KaydetButton"  class="btn btn-primary">Kaydet</button>
                            <button id="SubmitButton" type="submit" style="display:none"></button>
                        </div>
                        </div>
                    </div>
                </div>
            </div>
    </form>


    @section Scripts{

        <script>
            function validateForm1() {
                var kullaniciadi = document.getElementById("kullaniciadi").getElementsByTagName("input")[0].value;
                var sifre = document.getElementById("sifre").getElementsByTagName("input")[0].value;

                if (kullaniciadi.trim() === "") {
                    alert("Kullanıcı adı boş olamaz!");
                    return false; // Prevent form submission
                }

                if (sifre.trim() === "") {
                    alert("Şifre boş olamaz!");
                    return false; // Prevent form submission
                }
                // If both fields are filled, allow form submission
                return true;
            }

        </script> @* Bilgiler boş girilemez scripti*@

        <script>
            $(document).ready(function () {
                $('#KaydetButton').on('click', function (e) {
                    e.preventDefault();

                    Swal.fire({
                        title: 'Yeni kullanıcı bilgileri kaydedilsin mi?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, Kaydet',
                        cancelButtonText: 'İptal'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            clickButton();

                        }
                    });
                });
            });

            function clickButton() {
                // Butonun DOM öğesini seçiyoruz
                var button = document.getElementById("SubmitButton");

                // Simüle edilmiş bir tıklama olayı oluşturuyoruz
                var event = new MouseEvent("click", {
                    bubbles: true,
                    cancelable: true,
                    view: window
                });

                // Oluşturduğumuz tıklama olayını butona gönderiyoruz
                if (validateForm1()) {
                    button.dispatchEvent(event);
                }

            }

        </script> @* Kaydet onay sweatalert*@

        <script>

            document.getElementById("kullaniciadi").querySelector("input").value = "";
            document.getElementById("sifre").querySelector("input").value = "";
        </script>  @* İnputları boş gelmesi için script*@
       
        <script>
            // Tüm "silButton" sınıfına sahip öğeleri seç
            var deleteButtons = document.querySelectorAll(".silButton");

            // Her bir buton için olay dinleyici ekle
            deleteButtons.forEach(function (button) {
                button.addEventListener("click", function (e) {
                    e.preventDefault();
                    var apiId = button.getAttribute("data-id");

                    Swal.fire({
                        title: 'Emin misiniz?',
                        text: "Bu kişiyi silmek istediğinizden emin misiniz?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Evet, sil!',
                        cancelButtonText: 'İptal'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            performDelete(apiId);
                        }
                    });
                });
            });

            function performDelete(apiId) {
                $.ajax({
                    url: '/Home/KullaniciSil', // Controller işleminin URL'sini doğru şekilde belirtin
                    method: 'POST', // Veya GET, PUT, DELETE
                    data: { id: apiId }, // İsteğe gönderilecek veriler
                    success: function (data) {
                        Swal.fire({
                            icon: 'success', // İkon tipi
                            title: 'Silindi!', // Başlık
                            text: 'İşlem başarıyla tamamlandı.', // Metin içeriği
                            showConfirmButton: false, // Onay butonunu gizle
                            timer: 1500 // Otomatik kapatılma süresi (isteğe bağlı)
                        });

                        // Belirli bir süre sonra sayfanın yeniden yüklenmesini sağla
                        setTimeout(function () {
                            // Takvim controllerını tetiklemek için ayrı bir AJAX isteği gönder
                            // Burada triggerCalendarAction() veya gerekli işlemi çağırabilirsiniz
                            location.reload(); // Sayfayı yeniden yükle
                        }, 1500);
                    },
                    error: function () {
                        Swal.fire(
                            'Hata!',
                            'İşlem sırasında bir hata oluştu.',
                            'error'
                        );
                    }
                });
            }
        </script> @* Silme onayı sweatalert*@
        
        <script>
            $('body').on('click', '#kullanicieklegetir', function () {
                $(".modal").modal('show');
            })
        </script> @* Kullanıcı ekleme modal script*@
    }

    


</body>
</html>


