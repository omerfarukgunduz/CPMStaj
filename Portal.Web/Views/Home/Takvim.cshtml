@{
    Layout = "_CalenderLayout";

}

@model EtkinlikEklePageViewModel

<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />

    <link href="~/fullcalendar-5.11.3/lib/main.css" rel="stylesheet" />
    <link href="~/fullcalendar-5.11.3/lib/main.min.css" rel="stylesheet" />
    <link href='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css' rel='stylesheet'>
    <link href='https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css' rel='stylesheet'>
    <link href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700,800,900" rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/sidebar-07/css/style.css"> <!-- Doğru CSS dosyası yolu burada olmalı -->



    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/fullcalendar-5.11.3/lib/main.js"></script>

    

    <style>

        body {
            margin: 0;
            padding: 0;
            font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
            font-size: 15px;
        }


        #calendar {
            max-width: 1100px;
            margin: 40px auto;
            padding: 0 10px;
            cursor: pointer !important;
            border-radius: 10px;
        }

        /* Modal ve overlay için stiller */
        .black-container {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5); /* Yarı saydam siyah arkaplan */
            z-index: 9998; /* Overlay'ı takvimden daha altta tutmak için daha düşük bir z-index değeri */
        }

        .popup-container {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            padding: 20px;
            background-color: aliceblue;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            z-index: 9999;
            border-radius: 10px;
            cursor: initial;
            min-width: 700px;
        }

        .popup-title {
            margin-left: 0%;
            transform: translate(-50% 0%);
        }

        .textblock {
            background-color: #a5b1c2;
            border: 2px solid black;
            text-align: center;
        }


    </style>
</head>
<body>
    @{
       
        List<SelectListItem> TekrarlanmaTuru = new List<SelectListItem>
    {
    new SelectListItem { Value = "Tek Sefer", Text = "Tek Seferlik" },
    new SelectListItem { Value = "Aylık", Text =  "Aylık"},
    new SelectListItem { Value = "Yıllık", Text =  "Yıllık"},

    // Daha fazla seçenek eklenebilir
    };

    }

    <form method="post" action="/Home/Tahvim" enctype="multipart/form-data" onsubmit="return validateForm()">
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header p-3">
                        <h3 class="form-group" id="exampleModalLabel">YENİ ETKİNLİK EKLE</h3>
                    </div>
                    <div class="modal-body p-4">

                        <h5>Etkinlik Tarihi</h5>
                        <div class="form-group"> @Html.TextBoxFor(elm=>elm.EtkinlikEkle.start, "{0:yyyy-MM-dd}",new {@class = "form-control", @type="date"}) </div>

                        <h5>Etkinlik Tekrarlama Sıklığı</h5>
                        <div class="form-group">
                            @Html.DropDownListFor(elm => elm.EtkinlikEkle.Tekrar,new SelectList(TekrarlanmaTuru, "Value", "Text"),new{@id = "Tekrar",@class = "form-control",onchange = "dropdownValueChanged()"})

                        </div>
                        
                        <div class="form-group" id="TekrarNum" style="display:none">
                            <h5>Tekrarlanma Sayısı</h5>
                            @Html.TextBoxFor(elm => elm.EtkinlikEkle.TekrarNum, new { @class = "form-control", @type = "number", @value = Model?.EtkinlikEkle.TekrarNum ?? 1, @min = 1 })
                        </div>





                        <h5>Etkinlik Adı</h5>
                        <div class="form-group" id="etkinlikadi"> @Html.TextBoxFor(elm=>elm.EtkinlikEkle.title, new {@class = "form-control", @type="text", @placeholder="Etkinlik adını giriniz...", @value = Model?.EtkinlikEkle.title}) </div>
                        <h5>Etkinlik İçerik Metni</h5>
                        <div class="form-group" id="etkinlikadi"> @Html.TextAreaFor(elm=>elm.EtkinlikEkle.description, new {@class = "form-control", @type="text", @placeholder="Sosyal medyada paylaşılacak metni giriniz...", @value = Model?.EtkinlikEkle.description}) </div>

                        <h5>Fotoğraf Yükle</h5>
                        <input class="form-control" asp-for="EtkinlikEkle.image" type="file" id="fileName" accept=".jpeg, .jpg, .png" onchange="validateFileType()">

                        <br />
                        <h5>Sosyal Medya</h5>
                        <div class="form-group">
                            @Html.DropDownListFor(elm => elm.EtkinlikEkle.ApiId,new SelectList(Model.Apiler, "Value", "Text"),new{@id = "SecilenApi",@class = "form-control"})
                        </div>


                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                        <button  class="btn btn-primary" id="kaydet">Kaydet</button>
                        <button type="submit" style="display:none" id="submitbutton"></button>

                    </div>
                </div>
            </div>
        </div>
    </form>

    <div class="modal fade" id="editEventModal" tabindex="-1" aria-labelledby="editEventModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header p-3">
                    <h3 class="form-group" id="editEventModalLabel">Etkinlik Düzenleme</h3>
                </div>
                <div class="modal-body p-4">
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                    <a id="deleteButton" asp-controller="Home" asp-action="EtkinlikSil" asp-all-route-data="@(new Dictionary<string,string>(){{"Id",""}})" class="btn btn-danger">Sil</a>
            
                    <a id="deleteButtonAll" asp-controller="Home" asp-action="deneme" asp-all-route-data="@(new Dictionary<string,string>(){{"Id",""}})" class="btn btn-danger">Birlikte Oluşturulan Hepsini Sil</a>


                </div>
            </div>
        </div>
    </div>

    <div style="margin-top:1px !important; margin: 0 auto; padding: 10px 0px 10px 0px;">
        <h2 style="color:black; text-align:center;">Etkinlik Takvimi</h2>
        <div class="text-center">

            <button type="button" class="btn btn-primary" id="modalgetir">Yeni Etkinlik Ekle</button>
        </div>
        <div id='calendar'></div>
    </div>

    <div class="black-container" id="black"></div>

    <div class="popup-container" id="popup-data">
        <h2 class="popup-title my-4" id="deneme">Etkinlik Oluşturma Ekranı</h2>
        <a id="buton" class="btn btn-primary" onclick="closePopupData()">kapat</a>
    </div>
    

    
    @section Scripts{
        
        <script>
            function validateForm2() {
                var description = document.getElementById("etkinlikadi").getElementsByTagName("input")[0].value;
                if (description.trim() === "") {
                    alert("Etkinlik adı boş olamaz!");
                    return false; // Prevent form submission
                }
                return true;
            }
        </script>  @* Etkinlik adı doluluk kontrolü*@

        <script>
            $(document).ready(function () {
                $('#kaydet').on('click', function (e) {
                    e.preventDefault();

                    Swal.fire({
                        title: 'Yeni etkinlik bilgileri kaydedilsin mi?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, Kaydet',
                        cancelButtonText: 'İptal'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            clickButton();

                        }
                    });
                });
            });

            function clickButton() {
                // Butonun DOM öğesini seçiyoruz
                var button = document.getElementById("submitbutton");

                // Simüle edilmiş bir tıklama olayı oluşturuyoruz
                var event = new MouseEvent("click", {
                    bubbles: true,
                    cancelable: true,
                    view: window
                });

                // Oluşturduğumuz tıklama olayını butona gönderiyoruz
                if (validateForm2()){
                    button.dispatchEvent(event);
                }
                
                

            }

        </script> @* Kaydet onay sweatalert*@

        <script>
            function dropdownValueChanged() {
                var selectedValue = document.getElementById("Tekrar").value;

                // Eğer seçilen değer "Aylık" veya "Yıllık" ise
                if (selectedValue == "Aylık" || selectedValue == "Yıllık") {
                    var elem = document.getElementById("TekrarNum");
                    elem.style.display = "block";


                    // Görünürlüğü değiştir
                } else {
                    document.getElementById("TekrarNum").style.display = "none"; // Görünürlüğü gizle
                }
            }
        </script>  @* Tekrar sayısı combox kodları*@
       
        <script type="text/javascript">
            function validateFileType() {
                var fileName = document.getElementById("fileName").value;
                var idxDot = fileName.lastIndexOf(".") + 1;
                var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();
                var kaydetButton = document.getElementById("kaydet");

                if (extFile === "" || extFile == "jpg" || extFile == "jpeg" || extFile == "png") {
                    kaydetButton.removeAttribute("disabled");
                } else {
                    alert("Sadece jpg/jpeg ve png yükleyebilirsiniz!");
                    kaydetButton.setAttribute("disabled", "true");
                }
            }

            // Dosya seçimi yapıldığında butonu etkinleştir
            document.getElementById("fileName").addEventListener("change", validateFileType);
        </script> @* Dosya formatı kontrol kodları*@
        
        <script>
            $(document).ready(function () {
                $('#deleteButton').on('click', function (e) {
                    e.preventDefault();

                    Swal.fire({
                        title: 'Bu etkinliği silmek istediğinizden emin misiniz?',
                        text: "Bu işlem geri alınamaz!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, sil!',
                        cancelButtonText: 'İptal',
 
                    }).then((result) => {
                        if (result.isConfirmed) {
                            var denem = $("#partialItemGroupId").val();
                            if (denem != "") {

                                Swal.fire({
                                    title: 'Bu etkinlik tekrarlı tüm tekrarları silmek misiniz?',
                                    text: "Bu işlem geri alınamaz!",
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Evet, sil!',
                                    cancelButtonText: 'İptal',
                                    showDenyButton: true, // Ekstra buton
                                    denyButtonText: 'Hayır, Sadece Bunu Sil',
                                    denyButtonColor: '#3085d6',

                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        var Id = $("#partialItemId").val();

                                        performDeleteAll(Id);
                                    }
                                    else if (result.isDenied) {
                                        performDeleteAsSingle();
                                    }

                                });
                       
                            }
                            else{
                                performDeleteAsSingle();
                            }
                            // Onay verildiğinde silme işlemini başlat
                        }


                    });
                });
            });
            function performDeleteAll(Id) {
                $.ajax({
                    url: '/Home/EtkinlikSilAll', // Controller adı ve action adı
                    method: 'POST',
                    data: { id: Id }, // Id değerini iletmek
                    error: function (data) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Tüm Tekrarlar Silindi!',
                            text: data.message, // İşlem sonucu mesajı
                            showConfirmButton: false,
                            timer: 1500
                        });

                        setTimeout(function () {
                            location.reload();
                        }, 1500);
                    },
                    success: function (data) {
                        Swal.fire(
                            'success',
                            'Tüm Tekrarlar Silindi!',
                            //showConfirmButton: false,
                            data.message,


                        );
                        setTimeout(function () {
                            location.reload();
                        }, 1500);
                    }
                });
                }
            function performDeleteAsSingle() {
                // İşlemi başlatan fonksiyon
                $.ajax({
                    url: $('#deleteButton').attr('href'),
                    method: 'POST', // veya GET, PUT, DELETE
                    success: function (data) {
                        Swal.fire({
                            icon: 'success', // İkon tipi
                            title: 'Silindi!', // Başlık
                            text: 'İşlem başarıyla tamamlandı.', // Metin içeriği
                            showConfirmButton: false, // Onay butonunu gizle
                            timer: 1500 // Otomatik kapatılma süresi (isteğe bağlı)
                        });

                        // Belirli bir süre sonra sayfanın yeniden yüklenmesini sağla
                        setTimeout(function () {
                            // Takvim controllerını tetiklemek için ayrı bir AJAX isteği gönder
                            // Burada triggerCalendarAction() veya gerekli işlemi çağırabilirsiniz
                            location.reload(); // Sayfayı yeniden yükle
                        }, 1500);
                    },
                    error: function () {
                        Swal.fire(
                            'Hata!',
                            'İşlem sırasında bir hata oluştu.',
                            'error'
                        );
                    }
                });
            }
        </script>  @* SwearAlert kodları (silme Butonu) *@
        
        <script>

            document.addEventListener('DOMContentLoaded', function () {
                moment.locale('tr');
                var calendarEl = document.getElementById('calendar');


                var calendar = new FullCalendar.Calendar(calendarEl, {

                    displayEventTime: false,
                    initialDate: '2023-08-04',
                    initialView: 'dayGridMonth',
                    firstDay: 1,
                    locale: "tr",
                    timeZone: 'local',
                    themeSystem: 'bootstrap5',
                    buttonText: {
                        today: "Bugün",
                        month: "Ay",
                        week: "Hafta",
                        day: "Gün",
                        list: "Ajanda"

                    },

                    selectable: true,

                    headerToolbar: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,listMonth'
                    },

                    eventClick: function (info) {
                        var eventId = info.event.id;
                        
                        //window.location = "/Home/TiklananEtkinlik?eventId=" + eventId;
                        $.ajax({
                            url: '/Home/TiklananEtkinlikPartial',
                            method: 'GET',
                            data: { eventId: eventId },
                            success: function (resp) {
                                $("#deleteButtonAll").hide();
                                $("#editEventModal .modal-body").html(resp);
                                $("#editEventModal").modal('show');
                                $("#deleteButton").attr("href", "/Home/EtkinlikSil?Id=" + $("#partialItemId").val());
                                $("#deleteButtonAll").attr("href", "/Home/EtkinlikSil?Id=" + $("#partialItemId").val());
                                
                               
                               

                            }
                        })
                    },



                });


                var GetEvent = [];

                $.ajax({
                    url: '/Home/GetList', // Controller'dan dönen URL
                    method: 'GET', // İsteğin türü (GET, POST, vb.)
                    success: function (data) {
                        // Controller'dan gelen JSON verisi "data" değişkeninde olacak
                        // Burada veriyi bir liste olarak kullanabilirsiniz

                        GetEvent = data;
                        console.log(deneme);
                        calendar.removeAllEvents();
                        calendar.addEventSource(GetEvent);
                        calendar.render();
                    },
                    error: function () {
                        console.error("İstek sırasında bir hata oluştu.");
                    }
                });



            });





            $('body').on('click', '#modalgetir', function () {
                $("#exampleModal").modal('show');
            })



        //</script>  @* Calendar kodları*@

        <script>
            $(document).ready(function () {
                $('#deleteButtonAll').on('click', function (e) {
                    e.preventDefault();

                    Swal.fire({
                        title: 'Bütün tekrarları silmek istediğinizden emin misiniz?',
                        text: "Bu işlem geri alınamaz!",
                        icon: 'warning',

                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, sil!',
                        cancelButtonText: 'İptal'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            
                            var Id = $("#partialItemId").val();

                            performDeleteAll(Id); // Onay verildiğinde silme işlemini başlat
                        }
                    });
                });
            });



            function performDeleteAll(Id) {
                $.ajax({
                    url: '/Home/EtkinlikSilAll', // Controller adı ve action adı
                    method: 'POST',
                    data: { id: Id }, // Id değerini iletmek
                    error: function (data) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Tüm Tekrarlar Silindi!',
                            text: data.message, // İşlem sonucu mesajı
                            showConfirmButton: false,
                            timer: 1500
                        });

                        setTimeout(function () {
                            location.reload();
                        }, 1500);
                    },
                    success: function (data) {
                        Swal.fire(
                            'success',
                            'Tüm Tekrarlar Silindi!',
                            //showConfirmButton: false,
                            data.message,
                            

                        );
                        setTimeout(function () {
                            location.reload();
                        }, 1500);
                    }
                });
            }

        </script>  @* SwearAlert kodları (Toplu silme Butonu) *@

    }
</body>

</html>
