@using Portal.Domain.Entities
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@model ApiPageViewModel

<html>
<head>
    <title>Admin Paneli - Api Ayarları</title>

</head>

<body>
    @{
        // Örnek bir liste oluşturma
        List<SelectListItem> ApiList = new List<SelectListItem>
    {
    new SelectListItem { Value = "Linkedin", Text = "Linkedin" },

    // Daha fazla seçenek eklenebilir
    };

    }
    <h1>API </h1>


    <table class="table table-bordered">
        <tr>
            <td style="min-width:150px;">&nbsp;&nbsp; Sosyal Medya Türü</td>
            <td>Açıklama</td>
            <td>Token</td>
            <td>Son Değişiklik</td>
            <td>Sil</td>
            <td>Güncelle</td>

        </tr>
        @foreach (var api in Model.Token)
        {
            <tr>

                @switch (api.ApiTuru)
                {
                    case "Linkedin":

                        <td>
                            &nbsp;&nbsp;
                            @api.ApiTuru
                            <span class="bi bi-linkedin"></span>
                        </td>
                        break;
                        //Eklenen Api türlerinin listelenmesi için buraya da eklenmesi gerekir
                }




                <td> <div style="min-width:100px;">@api.TokenTitle </div></td>
                <td>@api.Token</td>
                <td>@api.CreatedDate</td>
                <td>
                    <a href="/Home/ApiSil/@api.Id.ToString()" class="btn btn-danger silButton" data-id="@api.Id.ToString()">Sil</a>
                </td>

                <td><a asp-controller="Home" asp-action="ApiGuncelle" asp-all-route-data="@(new Dictionary<string,string>(){{"Id",api.Id.ToString()}})" class="btn btn-warning">Güncelle</a></td>
            </tr>


        }
    </table>


    <button type="button" class="btn btn-primary" id="apieklebuton">Yeni Api Ekle</button>

<form method="post" action="/Home/ApiEkle" enctype="multipart/form-data" onsubmit="return validateForm()">
        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="form-group" id="exampleModalLabel">YENİ API EKLE</h1>
                    </div>
                    <div class="modal-body">
                        <h3>Sosyal Medya Türü</h3>
                        <div class="form-group">
                            <div class="form-group" id="rol">
                                @Html.DropDownListFor(elm => elm.SingleToken.ApiTuru, new SelectList(ApiList, "Value", "Text"), new { @class = "form-control" })
                            </div>

                            <h3>Açıklama</h3>
                            <div class="form-group" id="baslik"> @Html.TextBoxFor(elm=>elm.SingleToken.TokenTitle, new {@class = "form-control", @type="text", @placeholder="Açıklama giriniz...", @value = Model?.SingleToken.TokenTitle}) </div>
                            <h3>Token</h3>
                            <div class="form-group" id="token"> @Html.TextBoxFor(elm=>elm.SingleToken.Token, new {@class = "form-control", @type="text", @placeholder="Token giriniz...", @value = Model?.SingleToken.Token}) </div>
                            <div class="modal-footer">
                                <a class="btn btn-secondary" asp-action="Api">İptal</a>
                                <button id="SubmitButton" type="submit" style="display:none"></button>
                                <button id="KaydetButton" class="btn btn-primary">Kaydet</button>
                                 

                                
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            
                
            
    </form>


@section Scripts{

        <script>
            function validateForm() {
                var description = document.getElementById("baslik").getElementsByTagName("input")[0].value;
                var token = document.getElementById("token").getElementsByTagName("input")[0].value;

                if (description.trim() === "") {
                    alert("Açıklama boş olamaz!");
                    return false; // Prevent form submission
                }

                if (token.trim() === "") {
                    alert("Token boş olamaz!");
                    return false; // Prevent form submission
                }
                // If both fields are filled, allow form submission
                return true;
            }

        </script> @* Bilgiler boş girilemez scripti*@
       
        <script>
            $(document).ready(function () {
                $('#KaydetButton').on('click', function (e) {
                    e.preventDefault();

                    Swal.fire({
                        title: 'Yeni hesap bilgileri kaydedilsin mi?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Evet, Kaydet',
                        cancelButtonText: 'İptal'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            clickButton();

                        }
                    });
                });
            });

            function clickButton() {
                // Butonun DOM öğesini seçiyoruz
                var button = document.getElementById("SubmitButton");
                
                // Simüle edilmiş bir tıklama olayı oluşturuyoruz
                var event = new MouseEvent("click", {
                    bubbles: true,
                    cancelable: true,
                    view: window
                });

                // Oluşturduğumuz tıklama olayını butona gönderiyoruz
                if (validateForm()) {
                    button.dispatchEvent(event);
                }

            }

        </script> @* Kaydet onay sweatalert*@

        <script>

                document.getElementById("baslik").querySelector("input").value = "";
                document.getElementById("token").querySelector("input").value = "";
        </script> @* İnputların boş gelmesini sağlayan script*@
    
        <script>
            // Tüm "silButton" sınıfına sahip öğeleri seç
            var deleteButtons = document.querySelectorAll(".silButton");

            // Her bir buton için olay dinleyici ekle
            deleteButtons.forEach(function (button) {
                button.addEventListener("click", function (e) {
                    e.preventDefault();
                    var apiId = button.getAttribute("data-id");

                    Swal.fire({
                        title: 'Emin misiniz?',
                        text: "Bu hesabı silmek istediğinizden emin misiniz?",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Evet, sil!',
                        cancelButtonText: 'İptal'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            performDelete(apiId);
                        }
                    });
                });
            });

            function performDelete(apiId) {
                $.ajax({
                    url: '/Home/ApiSil', // Controller işleminin URL'sini doğru şekilde belirtin
                    method: 'POST', // Veya GET, PUT, DELETE
                    data: { id: apiId }, // İsteğe gönderilecek veriler
                    success: function (data) {
                        Swal.fire({
                            icon: 'success', // İkon tipi
                            title: 'Silindi!', // Başlık
                            text: 'İşlem başarıyla tamamlandı.', // Metin içeriği
                            showConfirmButton: false, // Onay butonunu gizle
                            timer: 1500 // Otomatik kapatılma süresi (isteğe bağlı)
                        });

                        // Belirli bir süre sonra sayfanın yeniden yüklenmesini sağla
                        setTimeout(function () {
                            // Takvim controllerını tetiklemek için ayrı bir AJAX isteği gönder
                            // Burada triggerCalendarAction() veya gerekli işlemi çağırabilirsiniz
                            location.reload(); // Sayfayı yeniden yükle
                        }, 1500);
                    },
                    error: function () {
                        Swal.fire(
                            'Hata!',
                            'İşlem sırasında bir hata oluştu.',
                            'error'
                        );
                    }
                });
            }
        </script> @* silme onayı sweatalert*@

        <script>
            $('body').on('click', '#apieklebuton', function () {
                $(".modal").modal('show');
            })
        </script> @* Api ekleme modal script*@
    }

</body>
</html>
